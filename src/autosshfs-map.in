#!/bin/bash

#
# autosshfs-map -- Compute autofs map for user's SSHFS mounts.
#
## LICENSE
#
# Copyright 2011,2012,2013 hellekin <hellekin@riseup.net>
# Copyright 2018 A. Lochmann <info@alexander-lochmann.de>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>,
# or, from the package source directory, run: make license
#
## USAGE
#
# autosshfs-map assumes the following constraints:
#
#

PROGNAME=`basename ${0}`

PREFIX="%PREFIX%"

. ${PREFIX}/bin/autosshfs-utils

fail() {
  echo "${PROGNAME}: $@"
  exit 1
}

# Get username from PWD.  It assumes the mountpoint is under user's $HOME.
USER=${AUTOFS_USER}

test -n "$USER" || fail "missing user"

SSH_WRAPPER="${PREFIX}/bin/autosshfs-as-${USER}"

if [ ! -x "${SSH_WRAPPER}" ]
then
  create_ssh_wrapper ${SSH_WRAPPER} ${USER}
fi

OPTS="-fstype=fuse,rw,allow_other,noatime,nosuid,nodev"
OPTS="${OPTS},uid=`id -u ${USER}`,gid=`id -g ${USER}`,workaround=rename,ssh_command=${SSH_WRAPPER}"

# You can connect to host not in your configuration file:
#
#  [user@]host[:port]
#
# will set port=port connect to user@host

HOST="${1}"

test -n "$HOST" || fail "missing key: did you use autofs?"

COLONPOS=$(expr index "${key}" :)
if [[ $COLONPOS > 0 ]]
then
  OPTS="${OPTS},port=${HOST:$COLONPOS}"
  HOST="${HOST:0:$[$COLONPOS - 1]}"
fi

# -fstype=fuse,rw,allow_other,... / sshfs\#remote_host:/
echo -e "${OPTS} \t/\t sshfs\#${HOST}:/"
